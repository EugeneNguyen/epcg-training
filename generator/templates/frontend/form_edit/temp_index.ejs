import {useMutation, useQuery} from "@apollo/client";
import {useParams, useHistory} from "react-router-dom";
import {useState} from "react";
import {toast} from 'react-toastify';
import API from '../apis';
import {Form, Input} from '../../../components/form';

export default function Form<%= modelNameCapitalCamel %>Edit() {
  const { id } = useParams();
  const history = useHistory();

<% for (const field of fieldsArray) { -%>
<%   if (field.editForm) { -%>
  const [<%= field.name %>, set<%= field.name %>] = useState(null);
<%   } -%>
<% } -%>

  const { loading, error, data, refetch } = useQuery(
    API.GET_BY_ID,
    {
      ...API.DEFAULT_OPTIONS,
      variables: { id },
      onCompleted: (response) => {
<% for (const field of fieldsArray) { -%>
<%   if (field.editForm) { -%>
        set<%= field.name %>(response.<%= modelNameSnake %>_get_by_id.<%= field.name %>);
<%   } -%>
<% } -%>
      },
    }
  );
  const [edit] = useMutation(API.EDIT, {
    onCompleted: () => {
      toast.success('Edit completed');
      history.push('/<%= baseUrl %>');
    }
  });

  if (loading) return "Loading ...";
  if (error) return "Error";
  if (!data) return "No data";

  return (
    <Form onSubmitParams={(params) => edit({ variables: { id, data: params } })}>
<% for (const field of fieldsArray) { -%>
<%   if (field.editForm) { -%>
      <Input
        type="text"
        name="<%= field.name %>"
        displayLabel="<%= field.displayLabel %>"
        value={<%= field.name %>}
        onChange={(event) => set<%= field.name %>(event.target.value)}
      />
<%   } -%>
<% } -%>
      <button type="submit" class="btn btn-primary">Submit</button>
    </Form>
  );
}
